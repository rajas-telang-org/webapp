name: MySQL Integration Test

on:
  pull_request:
    branches: 
      - main
      - dev
      
  push:
    branches:
      - main
      - dev


jobs:
  connect-remote:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_ROOT_HOST: "%"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: create and configure
        run: |
          touch .env
          echo port= 8080 >> .env
          echo host= 127.0.0.1 >> .env
          echo dialect= mysql >> .env
          echo user= ${{ secrets.DB_USER }} >> .env
          echo password= ${{ secrets.PASSWORD }} >> .env
          echo database= demo >> .env
      
      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        env:
          DB_HOST: ${{secrets.DB_HOST}}
          DB_USER: ${{secrets.DB_USER}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_NAME: ${{secrets.DB_NAME}}
          DB_PORT: ${{secrets.DB_PORT }}
          DB_DIALECT: ${{secrets.DB_DIALECT}}
          
        run: npm test

  packer:
      name: CI Packer
      runs-on: ubuntu-latest 

      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Download webapp repository
          run: zip -r webapp.zip ./
  
        - name: create .env file
          run: touch .env

        - name: Setup Packer
          uses: hashicorp/setup-packer@main
          with:
            packer_version: '1.9.4'

        - name: Initialize Packer
          run: packer init ./packer/

        - name: Run `packer fmt `
          run: |
            packer fmt -check ./packer/
            
          

        - name: Run `packer validate`
          run: |
            packer validate ./packer/aws-debian.pkr.hcl